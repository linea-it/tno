version: "3.6"
services:
  # Database
  database:
    image: linea/postgresql_q3c:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    expose:
      # Deixar a porta exposta para desenvolvimento
      # isto permite acessar o banco de dados a partir de outros apps como o DBeaver
      - 5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./pg_backups:/pg_backups
      - ./database_subset:/data

  # Message-Broker Software RabbitMQ
  rabbit:
    image: rabbitmq:3-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: tno
      RABBITMQ_DEFAULT_PASS: adminadmin
      RABBITMQ_DEFAULT_VHOST: tno_vhost
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/      

  # Backend Django
  backend: &backend
    user: "1000:1000"
    build: ./backend
    command: /start.sh
    volumes:
      # Diretório de Código fonte da aplicação
      - ./backend:/usr/src/app
      # Arquivo de Variaveis de ambiente
      - ./local_settings.py:/usr/src/app/coreAdmin/local_settings.py
      # Diretório de Logs
      - ./log:/log
      # Diretório de Dados
      - ./archive:/archive
    depends_on:
      - database

  # Copia do serviço backend, mas executando outro comando
  celery_worker: &celery_worker
    <<: *backend
    command: /start_worker.sh

  # Copia do serviço backend, mas executando outro comando
  celery_beat: &celery_beat
    <<: *backend
    command: /start_beat.sh

  # Frontend React
  frontend:
    image: node:18.12.1
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./frontend/node_modules:/app/node_modules
    stdin_open: true
    environment:
      # Fixes bug where websocket connection is fixed to default port 3000
      - WDS_SOCKET_PORT=0
    command: yarn start

  sora:
    image: mozaru/carto-sora
    user: "1000:1000"
    environment:
      INPUT_PATH: "/media/input"
      OUTPUT_PATH: "/media/output"
      CACHE_PATH: "/media/output"
      PORT: 8000
    volumes:
      - ./archive/sora/input:/media/input
      - ./archive/sora/output:/media/output
    command: python3.7 /opt/server/main.py

  # jupyter:
  #   image: jupyter/scipy-notebook:latest
  #   command: "start-notebook.sh"
  #   environment:
  #     NB_USER: docker_worker
  #     CHOWN_HOME: 'yes'
  #     CHOWN_HOME_OPTS: -R
  #     JUPYTER_ENABLE_LAB: 'yes'
  #   volumes:
  #     - ./archive/jupyter:/home/jovyan/work
  #   ports:
  #     - 8888:8888
  #   links:
  #     - database      

  # Servidor Web NGINX
  nginx:
    image: nginx:latest
    # build: ./frontend
    ports:
      - 80:8080
    volumes:
      # Arquivo de configuração do Ngnix para este ambiente.
      - ./nginx-proxy-development.conf:/etc/nginx/conf.d/default.conf:ro
      # Diretório onde o backend manipula arquivos, e que deve ficar acessivel ao servidor web.
      - ./archive:/var/www/data
    depends_on:
      - backend
      - frontend

volumes:
  rabbitmq-data: