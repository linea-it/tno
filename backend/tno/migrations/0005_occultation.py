# Generated by Django 2.2.13 on 2021-10-25 17:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("tno", "0004_auto_20210625_0122"),
    ]

    operations = [
        migrations.CreateModel(
            name="Occultation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="(ucd=“meta.id;meta.main”) Object name (official or provisional designation).",
                        max_length=32,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="(ucd=“meta.id;meta.number”) Object number (not all objects have numbers assigned).",
                        max_length=35,
                        null=True,
                        verbose_name="Number",
                    ),
                ),
                ("date_time", models.DateTimeField(verbose_name="Date Time")),
                (
                    "ra_star_candidate",
                    models.CharField(max_length=20, verbose_name="RA Star Candidate"),
                ),
                (
                    "dec_star_candidate",
                    models.CharField(max_length=20, verbose_name="Dec Star Candidate"),
                ),
                (
                    "ra_target",
                    models.CharField(max_length=20, verbose_name="RA Target"),
                ),
                (
                    "dec_target",
                    models.CharField(max_length=20, verbose_name="Dec Target"),
                ),
                (
                    "closest_approach",
                    models.FloatField(
                        default=0,
                        help_text="geocentric closest approach, in arcsec",
                        verbose_name="Closest approach",
                    ),
                ),
                (
                    "position_angle",
                    models.FloatField(
                        default=0,
                        help_text="Planet position angle wrt to star at C/A, in deg",
                        verbose_name="Position Angle",
                    ),
                ),
                (
                    "velocity",
                    models.FloatField(
                        default=0,
                        help_text="velocity in plane of sky, in km/sec, positive= prograde, negative= retrograde",
                        verbose_name="Velocity",
                    ),
                ),
                (
                    "delta",
                    models.FloatField(
                        default=0,
                        help_text="Planet range to Earth, AU",
                        verbose_name="Delta",
                    ),
                ),
                (
                    "g",
                    models.FloatField(
                        default=0,
                        help_text="G*, J*, H*, K* are normalized magnitudes to a common",
                        verbose_name="G*",
                    ),
                ),
                (
                    "j",
                    models.FloatField(
                        default=0,
                        help_text="G*, J*, H*, K* are normalized magnitudes to a common",
                        verbose_name="J*",
                    ),
                ),
                (
                    "h",
                    models.FloatField(
                        default=0,
                        help_text="G*, J*, H*, K* are normalized magnitudes to a common",
                        verbose_name="H*",
                    ),
                ),
                (
                    "k",
                    models.FloatField(
                        default=0,
                        help_text="G*, J*, H*, K* are normalized magnitudes to a common",
                        verbose_name="K*",
                    ),
                ),
                (
                    "long",
                    models.FloatField(
                        default=0,
                        help_text="East longitude of sub-planet point, deg, positive towards East",
                        verbose_name="Long",
                    ),
                ),
                (
                    "loc_t",
                    models.TimeField(
                        blank=True,
                        default=None,
                        help_text="loc. t.= UT + long: local solar time at sub-planet point, hh:mm",
                        null=True,
                        verbose_name="Loc. t.",
                    ),
                ),
                (
                    "off_ra",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="Offset applied to ephemeris off_ra(mas) = A * (t-t0) + B",
                        null=True,
                        verbose_name="off_ra",
                    ),
                ),
                (
                    "off_dec",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="Offset applied to ephemeris off_de(mas) = C * (t-t0) + D",
                        null=True,
                        verbose_name="off_dec",
                    ),
                ),
                (
                    "proper_motion",
                    models.CharField(
                        blank=True,
                        choices=[("ok", "ok"), ("no", "no")],
                        default=None,
                        help_text="proper motion applied? (ok, no)",
                        max_length=2,
                        null=True,
                        verbose_name="Proper Motion",
                    ),
                ),
                (
                    "ct",
                    models.CharField(
                        blank=True,
                        default=None,
                        help_text="only Gaia DR1 stars are used",
                        max_length=10,
                        null=True,
                        verbose_name="ct",
                    ),
                ),
                (
                    "multiplicity_flag",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "no multiple entries per star in astrometry"),
                            ("1", "single position from 2 or more uc/2m entries"),
                            ("2", "single position from 1 uc/2m entry only"),
                            ("3", "fs position from entry with more N contributions"),
                            ("4", "fs position from entry with best (x,y) error"),
                            ("5", "fs position from entry with brightest R mag."),
                            ("6", "fs position from average over all entries."),
                        ],
                        default=None,
                        help_text="multiplicity flag (not applicable here) (see details in Assafin et al. 2010)",
                        max_length=2,
                        null=True,
                        verbose_name="Multiplicity Flag",
                    ),
                ),
                (
                    "e_ra",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="E_ra, E_dec: error of star position (mas)",
                        null=True,
                        verbose_name="E_ra",
                    ),
                ),
                (
                    "e_dec",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="E_ra, E_dec: error of star position (mas)",
                        null=True,
                        verbose_name="E_dec",
                    ),
                ),
                (
                    "pmra",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="star proper motion (mas/yr); (0 when not provided by Gaia DR1)",
                        null=True,
                        verbose_name="pmra",
                    ),
                ),
                (
                    "pmdec",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="star proper motion (mas/yr); (0 when not provided by Gaia DR1)",
                        null=True,
                        verbose_name="pmra",
                    ),
                ),
                (
                    "ra_star_deg",
                    models.FloatField(
                        blank=True,
                        help_text="Right ascension of star in degrees",
                        null=True,
                        verbose_name="RA Star (deg)",
                    ),
                ),
                (
                    "dec_star_deg",
                    models.FloatField(
                        blank=True,
                        help_text="Declination of star in degrees",
                        null=True,
                        verbose_name="Dec Star (deg)",
                    ),
                ),
                (
                    "ra_target_deg",
                    models.FloatField(
                        blank=True,
                        help_text="Right ascension of target in degrees",
                        null=True,
                        verbose_name="RA Target (deg)",
                    ),
                ),
                (
                    "dec_target_deg",
                    models.FloatField(
                        blank=True,
                        help_text="Declination of target in degrees",
                        null=True,
                        verbose_name="Dec Target (deg)",
                    ),
                ),
                (
                    "asteroid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="occultation",
                        to="tno.Asteroid",
                        verbose_name="Asteroid",
                    ),
                ),
            ],
        ),
    ]
