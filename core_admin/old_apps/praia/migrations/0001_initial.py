# Generated by Django 2.0.12 on 2020-06-04 17:54

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tno', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AstrometryAsteroid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='(ucd=“meta.id;meta.main”) Object name (official or provisional designation).', max_length=32, verbose_name='Name')),
                ('number', models.CharField(blank=True, default=None, help_text='(ucd=“meta.id;meta.number”) Object number (not all objects have numbers assigned).', max_length=6, null=True, verbose_name='Number')),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('running', 'Running'), ('warning', 'Warning'), ('success', 'Success'), ('failure', 'Failure'), ('not_executed', 'Not Executed'), ('idle', 'Idle')], default='pending', max_length=15, null=True, verbose_name='Status')),
                ('ccd_images', models.IntegerField(blank=True, default=0, help_text='Number of CCDs for this asteroid.', null=True, verbose_name='CCD Images')),
                ('available_ccd_image', models.IntegerField(blank=True, default=0, help_text='Number of CCDs that were available for this asteroid', null=True, verbose_name='Available CCD Images')),
                ('processed_ccd_image', models.IntegerField(blank=True, default=0, help_text='Number of CCDs that were processed for this asteroid', null=True, verbose_name='Processed CCD Images')),
                ('catalog_rows', models.BigIntegerField(blank=True, null=True, verbose_name='Catalog Rows')),
                ('error_msg', models.CharField(blank=True, help_text='When the status is failure, this field should contain a message with the error.', max_length=2048, null=True, verbose_name='Error Message')),
                ('execution_ccd_list', models.DurationField(blank=True, default=datetime.timedelta, help_text='Time taken to retrieve list of asteroid-related ccds.', null=True, verbose_name='Execution CCD List')),
                ('execution_bsp_jpl', models.DurationField(blank=True, default=datetime.timedelta, help_text='Time taken to retrieve Ephemeris from JPL.', null=True, verbose_name='Execution Ephemeris JPL')),
                ('execution_reference_catalog', models.DurationField(blank=True, default=datetime.timedelta, help_text='Time taken to query stars in Reference Catalog.', null=True, verbose_name='Execution Reference Catalog')),
                ('execution_header', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Execution Header Extraction')),
                ('execution_astrometry', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Execution PRAIA Astrometry')),
                ('execution_targets', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Execution PRAIA Targets')),
                ('execution_plots', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Execution Plots')),
                ('execution_registry', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Execution Registry')),
                ('execution_time', models.DurationField(blank=True, default=datetime.timedelta, null=True, verbose_name='Execution Time')),
                ('outputs', models.IntegerField(blank=True, default=0, help_text='Total outputs generated for this asteroid.', null=True, verbose_name='Outputs')),
                ('relative_path', models.CharField(blank=True, help_text='Path relative to the Astrometry OBJECT directory, this is the internal path in the proccess directory.', max_length=1024, null=True, verbose_name='Relative Path')),
                ('condor_relative_path', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Condor Relative Path')),
            ],
        ),
        migrations.CreateModel(
            name='AstrometryInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_type', models.CharField(choices=[('ccd_images_list', 'CCD Images List'), ('bsp_jpl', 'Ephemeris JPL'), ('catalog', 'Reference Catalog')], help_text='Description of the input type.', max_length=60, verbose_name='Input Type')),
                ('filename', models.CharField(max_length=1024, verbose_name='Filename')),
                ('file_size', models.BigIntegerField(blank=True, help_text='File Size in bytes', null=True, verbose_name='File Size')),
                ('file_type', models.CharField(blank=True, help_text="File extension like '.txt'", max_length=10, null=True, verbose_name='File Type')),
                ('file_path', models.CharField(blank=True, help_text='Path to file, this is the internal path in the proccess directory.', max_length=1024, null=True, verbose_name='File Path')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('finish_time', models.DateTimeField(blank=True, null=True, verbose_name='Finish Time')),
                ('execution_time', models.DurationField(blank=True, null=True, verbose_name='Execution Time')),
                ('error_msg', models.CharField(blank=True, help_text='This field contains the error message that occurred during the creation of the Input.', max_length=2048, null=True, verbose_name='Error Message')),
                ('asteroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_file', to='praia.AstrometryAsteroid', verbose_name='Asteroid')),
            ],
        ),
        migrations.CreateModel(
            name='AstrometryJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusterid', models.BigIntegerField(blank=True, null=True, verbose_name='Cluster Id')),
                ('procid', models.IntegerField(blank=True, null=True, verbose_name='Proc Id')),
                ('global_job_id', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Global Job Id')),
                ('job_status', models.IntegerField(blank=True, choices=[(0, 'Unexpanded'), (1, 'Idle'), (2, 'Running'), (3, 'Removed'), (4, 'Completed'), (5, 'Held'), (6, 'Submission')], null=True, verbose_name='Job Status')),
                ('cluster_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Cluster Name')),
                ('remote_host', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Remote Host')),
                ('args', models.CharField(blank=True, max_length=2000, null=True, verbose_name='Args')),
                ('submit_time', models.DateTimeField(blank=True, null=True, verbose_name='Submit Time')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('finish_time', models.DateTimeField(blank=True, null=True, verbose_name='Finish Time')),
                ('execution_time', models.DurationField(blank=True, null=True, verbose_name='Execution Time')),
                ('asteroid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='condor_job', to='praia.AstrometryAsteroid', verbose_name='Asteroid')),
            ],
        ),
        migrations.CreateModel(
            name='AstrometryOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('astrometry', 'Astrometry'), ('target_offset', 'Target Offset'), ('targets', 'Targets'), ('targets_log', 'Target Search Log'), ('astrometric_results', 'Astrometric Results (xy)'), ('saoimage_region_file', 'SAO image region file'), ('mes', 'mes'), ('header_extraction', 'Header Extraction'), ('header_extraction_log', 'Header Extraction Log'), ('ast_reduction', 'Astrometry Reduction'), ('ast_photometry', 'Astrometry Photometry'), ('astrometry_input', 'Astrometry Input'), ('astrometry_params', 'Astrometry Parameters'), ('astrometry_log', 'PRAIA Astrometry Log'), ('astrometry_plot', 'Plot')], help_text='Description of the result type.', max_length=60, verbose_name='Type')),
                ('catalog', models.CharField(blank=True, default=None, max_length=1024, null=True, verbose_name='Reference Catalog')),
                ('ccd_image', models.CharField(blank=True, default=None, max_length=1024, null=True, verbose_name='ID for Pointing')),
                ('filename', models.CharField(max_length=1024, verbose_name='Filename')),
                ('file_size', models.BigIntegerField(help_text='File Size in bytes', verbose_name='File Size')),
                ('file_type', models.CharField(help_text="File extension like '.txt'", max_length=10, verbose_name='File Type')),
                ('file_path', models.CharField(blank=True, help_text='Path to file, this is the internal path in the proccess directory.', max_length=1024, null=True, verbose_name='File Path')),
                ('asteroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ast_outputs', to='praia.AstrometryAsteroid', verbose_name='Asteroid')),
            ],
            options={
                'ordering': ['ccd_image', 'type', 'catalog'],
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creation Date')),
                ('displayname', models.CharField(max_length=128, verbose_name='Name')),
                ('owner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Start Time')),
                ('finish_time', models.DateTimeField(blank=True, null=True, verbose_name='Finish Time')),
                ('execution_time', models.DurationField(blank=True, null=True, verbose_name='Execution Time')),
                ('execution_ccd_images', models.DurationField(blank=True, null=True, verbose_name='Execution CCD Images')),
                ('execution_bsp_jpl', models.DurationField(blank=True, null=True, verbose_name='Execution BSP JPL')),
                ('execution_catalog', models.DurationField(blank=True, null=True, verbose_name='Execution Catalog')),
                ('execution_astrometry', models.DurationField(blank=True, null=True, verbose_name='Execution Astrometry')),
                ('count_objects', models.PositiveIntegerField(blank=True, help_text='Number of objects received as input', null=True, verbose_name='Count Asteroids')),
                ('count_success', models.PositiveIntegerField(blank=True, help_text='Number of objects successfully executed', null=True, verbose_name='Count Success')),
                ('count_failed', models.PositiveIntegerField(blank=True, help_text='Number of failed objects', null=True, verbose_name='Count Failed')),
                ('count_warning', models.PositiveIntegerField(blank=True, help_text='Number of objects with status warning', null=True, verbose_name='Count Warning')),
                ('count_not_executed', models.PositiveIntegerField(blank=True, help_text='Number of objects that were NOT executed.', null=True, verbose_name='Count Not Executed')),
                ('relative_path', models.CharField(blank=True, help_text='Path relative to the astrometry directory, this is the internal path in the proccess directory.', max_length=2048, null=True, verbose_name='Relative Path')),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('reexecute', 'Reexecute'), ('failure', 'Failure')], default='pending', max_length=10, null=True, verbose_name='Status')),
                ('step', models.IntegerField(blank=True, choices=[(0, 'CCD Images'), (1, 'Bsp JPL'), (2, 'Reference Catalog'), (3, 'Praia Astrometry'), (4, 'Done')], default=0, null=True, verbose_name='Current Step')),
                ('error_msg', models.CharField(blank=True, help_text='When the status is failure, this field should contain a message with the error.', max_length=2048, null=True, verbose_name='Error Message')),
                ('error_traceback', models.TextField(blank=True, null=True, verbose_name='Error Traceback')),
                ('catalog', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='tno.Catalog', verbose_name='Catalog')),
                ('configuration', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='praia.Configuration', verbose_name='Configuration')),
                ('input_list', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='tno.CustomList', verbose_name='Input List')),
                ('owner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('proccess', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='tno.Proccess', verbose_name='Proccess')),
            ],
        ),
        migrations.AddField(
            model_name='astrometryjob',
            name='astrometry_run',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='condor_jobs', to='praia.Run', verbose_name='Astrometry Run'),
        ),
        migrations.AddField(
            model_name='astrometryasteroid',
            name='astrometry_run',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='asteroids', to='praia.Run', verbose_name='Astrometry Run'),
        ),
        migrations.AddIndex(
            model_name='astrometryoutput',
            index=models.Index(fields=['type'], name='praia_astro_type_cfa3a3_idx'),
        ),
        migrations.AddIndex(
            model_name='astrometryoutput',
            index=models.Index(fields=['ccd_image'], name='praia_astro_ccd_ima_7a04a4_idx'),
        ),
        migrations.AddIndex(
            model_name='astrometryoutput',
            index=models.Index(fields=['file_type'], name='praia_astro_file_ty_b06b01_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='astrometryinput',
            unique_together={('asteroid', 'input_type')},
        ),
        migrations.AlterUniqueTogether(
            name='astrometryasteroid',
            unique_together={('astrometry_run', 'name')},
        ),
    ]
