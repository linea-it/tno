# Generated by Django 2.0.12 on 2020-05-27 16:12

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='(ucd=“meta.id;meta.main”) Object name (official or provisional designation).', max_length=32, verbose_name='Name')),
                ('number', models.CharField(blank=True, default=None, help_text='(ucd=“meta.id;meta.number”) Object number (not all objects have numbers assigned).', max_length=35, null=True, verbose_name='Number')),
                ('dynclass', models.CharField(help_text='(ucd=“meta.code.class;src.class”) Object class (TNO, Centaur, Trojan, etc.).', max_length=24, verbose_name='Object classification')),
                ('ra', models.CharField(help_text='(ucd=“pos.eq.ra;meta.main”) Right ascension of the identified object.', max_length=20, verbose_name='RA')),
                ('dec', models.CharField(help_text='(ucd=“pos.eq.dec;meta.main”) Declination of the identified object.', max_length=20, verbose_name='Dec')),
                ('raj2000', models.FloatField(help_text='(ucd=“pos.eq.ra;meta.main”) Right ascension of the identified object in degrees.', verbose_name='RA (deg)')),
                ('decj2000', models.FloatField(help_text='(ucd=“pos.eq.dec;meta.main”) Declination of the identified object in degrees.', verbose_name='Dec (deg)')),
                ('mv', models.FloatField(blank=True, default=None, help_text='(ucd=“phot.mag;em.opt.V”) Visual magnitude', null=True, verbose_name='Mv')),
                ('errpos', models.FloatField(blank=True, default=None, help_text='(ucd=“stat.error.sys”) Uncertainty on the (RA,DEC) coordinates', null=True, verbose_name='ErrPos')),
                ('d', models.FloatField(blank=True, default=None, help_text='(ucd="pos.ang") Body-to-center angular distance', null=True, verbose_name='d')),
                ('dracosdec', models.FloatField(blank=True, default=None, help_text='(ucd=“pos.pm;pos.eq.ra”) Motion in right ascension d(RA)cos(DEC)', null=True, verbose_name='dRAcosDec')),
                ('ddec', models.FloatField(blank=True, default=None, help_text='(ucd=“pos.pm;pos.eq.dec”) Motion in declination d(DEC)', null=True, verbose_name='dDEC')),
                ('dgeo', models.FloatField(blank=True, default=None, help_text='(ucd=“phys.distance”) Distance from observer', null=True, verbose_name='Dgeo')),
                ('dhelio', models.FloatField(blank=True, default=None, help_text='(ucd=“phys.distance”) Distance from the Sun', null=True, verbose_name='Dhelio')),
                ('phase', models.FloatField(blank=True, default=None, help_text='(ucd=“pos.phaseAng”) Phase angle, e.g. elongation of earth from sun as seen from object', null=True, verbose_name='Phase')),
                ('solelong', models.FloatField(blank=True, default=None, help_text='(ucd=“pos.angDistance”) Solar elongation, e.g. elongation of object from sun as seen from Earth', null=True, verbose_name='SolElong')),
                ('px', models.FloatField(blank=True, default=None, help_text='(ucd=“src.orbital.pos;meta.id.x”) Mean J2000 heliocentric position vector, x component', null=True, verbose_name='Px')),
                ('py', models.FloatField(blank=True, default=None, help_text='(ucd=“src.orbital.pos;meta.id.y”) Mean J2000 heliocentric position vector, y component', null=True, verbose_name='Py')),
                ('pz', models.FloatField(blank=True, default=None, help_text='(ucd=“src.orbital.pos;meta.id.z”) Mean J2000 heliocentric position vector, z component', null=True, verbose_name='Pz')),
                ('vx', models.FloatField(blank=True, default=None, help_text='(ucd=“src.veloc.orbital;meta.id.x”) Mean J2000 heliocentric velocity vector, x component', null=True, verbose_name='Vx')),
                ('vy', models.FloatField(blank=True, default=None, help_text='(ucd=“src.veloc.orbital;meta.id.y”) Mean J2000 heliocentric velocity vector, y component', null=True, verbose_name='Vy')),
                ('vz', models.FloatField(blank=True, default=None, help_text='(ucd=“src.veloc.orbital;meta.id.z”) Mean J2000 heliocentric velocity vector, z component', null=True, verbose_name='Vz')),
                ('jdref', models.FloatField(blank=True, default=None, help_text='(ucd=“time.epoch”) Reference epoch of the position/velocity vector', null=True, verbose_name='JDRef')),
                ('ticket', models.BigIntegerField(default=0, help_text='Id of the request made in the skybot. it serves to group all the positions that are of the same request.', verbose_name='Skybot Ticket')),
            ],
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['number'], name='skybot_posi_number_488455_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['name'], name='skybot_posi_name_f18e0e_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['dynclass'], name='skybot_posi_dynclas_9f5817_idx'),
        ),
        migrations.AddIndex(
            model_name='position',
            index=models.Index(fields=['ticket'], name='skybot_posi_ticket_0a433a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='position',
            unique_together={('name', 'raj2000', 'decj2000', 'ticket')},
        ),
    ]
