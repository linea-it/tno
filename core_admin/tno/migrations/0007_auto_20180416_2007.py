# Generated by Django 2.0.3 on 2018-04-16 20:07

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tno', '0006_ccdimage'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pointing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pfw_attempt_id', models.BigIntegerField(help_text='Unique identifier for each image (1 image is composed by 62 CCDs)', verbose_name='Image Id')),
                ('desfile_id', models.BigIntegerField(help_text='Unique identifier for each CCD.', verbose_name='CCD Id')),
                ('nite', models.DateField(help_text='Night at which the observation was made.', verbose_name='Night')),
                ('date_obs', models.DateTimeField(help_text='Date and time of observation', verbose_name='Observation Date')),
                ('expnum', models.BigIntegerField(help_text='Unique identifier for each image, same function as pfw_attenp_id (it also recorded in the file name)', verbose_name='Exposure')),
                ('ccdnum', models.IntegerField(help_text='CCD Number (1, 2, ..., 62)', verbose_name='CCD')),
                ('band', models.CharField(choices=[('u', 'u'), ('g', 'g'), ('r', 'r'), ('i', 'i'), ('z', 'z'), ('Y', 'Y')], help_text='Filter used to do the observation (u, g, r, i, z, Y).', max_length=1, verbose_name='Filter')),
                ('exptime', models.FloatField(help_text='Exposure time of observation.', verbose_name='Exposure time')),
                ('cloud_apass', models.FloatField(help_text='Atmospheric extinction in magnitudes', verbose_name='Cloud apass')),
                ('cloud_nomad', models.FloatField(help_text='Atmospheric extinction in magnitudes', verbose_name='Cloud nomad')),
                ('t_eff', models.FloatField(help_text='Parameter related to image quality', verbose_name='t_eff')),
                ('crossra0', models.BooleanField(default=False, verbose_name='Cross RA 0')),
                ('radeg', models.FloatField(verbose_name='RA (deg)')),
                ('decdeg', models.FloatField(verbose_name='Dec (deg)')),
                ('racmin', models.FloatField(help_text='Minimal and maximum right ascension respectively of the CCD cover.', verbose_name='racmin')),
                ('racmax', models.FloatField(help_text='Minimal and maximum right ascension respectively of the CCD cover.', verbose_name='racmax')),
                ('deccmin', models.FloatField(help_text='Minimum and maximum declination respectively of the CCD cover.', verbose_name='deccmin')),
                ('deccmax', models.FloatField(help_text='Minimum and maximum declination respectively of the CCD cover.', verbose_name='deccmax')),
                ('ra_cent', models.FloatField(help_text='Right ascension of the CCD center', verbose_name='ra_cent')),
                ('dec_cent', models.FloatField(help_text='Declination of the CCD center', verbose_name='dec_cent')),
                ('rac1', models.FloatField(help_text='CCD Corner Coordinates 1 - upper left.', verbose_name='rac1')),
                ('rac2', models.FloatField(help_text='CCD Corner Coordinates 2 - lower left.', verbose_name='rac2')),
                ('rac3', models.FloatField(help_text='CCD Corner Coordinates 3 - lower right.', verbose_name='rac3')),
                ('rac4', models.FloatField(help_text='CCD Corner Coordinates 4 - upper right).', verbose_name='rac4')),
                ('decc1', models.FloatField(help_text='CCD Corner Coordinates 1 - upper left.', verbose_name='decc1')),
                ('decc2', models.FloatField(help_text='CCD Corner Coordinates 2 - lower left.', verbose_name='decc2')),
                ('decc3', models.FloatField(help_text='CCD Corner Coordinates 3 - lower right.', verbose_name='decc3')),
                ('decc4', models.FloatField(help_text='CCD Corner Coordinates 4 - upper right).', verbose_name='decc4')),
                ('ra_size', models.FloatField(help_text='CCD dimensions in degrees (width × height).', verbose_name='ra_size')),
                ('dec_size', models.FloatField(help_text='CCD dimensions in degrees (width × height).', verbose_name='dec_size')),
                ('path', models.TextField(help_text='Path in the DES database where the image is stored.', verbose_name='Path')),
                ('filename', models.CharField(help_text='Name of FITS file with a CCD image.', max_length=256, verbose_name='Filename')),
                ('compression', models.CharField(help_text='Compression format (.fz) used in FITS files', max_length=5, verbose_name='Compression')),
                ('downloaded', models.BooleanField(default=False, help_text='flag indicating whether the image was downloaded from DES.', verbose_name='Downloaded')),
            ],
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['expnum'], name='tno_pointin_expnum_807fae_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['expnum', 'ccdnum'], name='tno_pointin_expnum_f5e2aa_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['expnum', 'ccdnum', 'band'], name='tno_pointin_expnum_56b427_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['date_obs'], name='tno_pointin_date_ob_0c709f_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['rac1'], name='tno_pointin_rac1_0866c2_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['rac2'], name='tno_pointin_rac2_d56a32_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['rac3'], name='tno_pointin_rac3_ab0355_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['rac4'], name='tno_pointin_rac4_41f39a_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['decc1'], name='tno_pointin_decc1_7e9786_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['decc2'], name='tno_pointin_decc2_f695e9_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['decc3'], name='tno_pointin_decc3_e56097_idx'),
        ),
        migrations.AddIndex(
            model_name='pointing',
            index=models.Index(fields=['decc4'], name='tno_pointin_decc4_91f279_idx'),
        ),
    ]
