# Generated by Django 2.0.3 on 2019-03-22 13:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orbit', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tno', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BspPlanetary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Internal name', max_length=100, null=True, verbose_name='Name')),
                ('display_name', models.CharField(blank=True, help_text='Display Name.', max_length=100, null=True, verbose_name='Display name')),
                ('url', models.URLField(blank=True, help_text='URL of archives.', max_length=100, null=True, verbose_name='URL')),
                ('upload', models.FileField(blank=True, help_text='Upload of archives.', null=True, upload_to='bsp_planetary', verbose_name='file')),
            ],
        ),
        migrations.CreateModel(
            name='LeapSecond',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Internal name', max_length=100, null=True, verbose_name='Name')),
                ('display_name', models.CharField(blank=True, help_text='Display Name.', max_length=100, null=True, verbose_name='Display name')),
                ('url', models.URLField(blank=True, help_text='URL of archives.', max_length=100, null=True, verbose_name='URL')),
                ('upload', models.FileField(blank=True, help_text='Upload of archives.', null=True, upload_to='leap_seconds', verbose_name='file')),
            ],
        ),
        migrations.CreateModel(
            name='Occultation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(verbose_name='Date Time')),
                ('ra_star_candidate', models.CharField(max_length=20, verbose_name='RA Star Candidate')),
                ('dec_star_candidate', models.CharField(max_length=20, verbose_name='Dec Star Candidate')),
                ('ra_target', models.CharField(max_length=20, verbose_name='RA Target')),
                ('dec_target', models.CharField(max_length=20, verbose_name='Dec Target')),
                ('closest_approach', models.FloatField(default=0, help_text='geocentric closest approach, in arcsec', verbose_name='Closest approach')),
                ('position_angle', models.FloatField(default=0, help_text='Planet position angle wrt to star at C/A, in deg', verbose_name='Position Angle')),
                ('velocity', models.FloatField(default=0, help_text='velocity in plane of sky, in km/sec, positive= prograde, negative= retrograde', verbose_name='Velocity')),
                ('delta', models.FloatField(default=0, help_text='Planet range to Earth, AU', verbose_name='Delta')),
                ('g', models.FloatField(default=0, help_text='G*, J*, H*, K* are normalized magnitudes to a common', verbose_name='G*')),
                ('j', models.FloatField(default=0, help_text='G*, J*, H*, K* are normalized magnitudes to a common', verbose_name='J*')),
                ('h', models.FloatField(default=0, help_text='G*, J*, H*, K* are normalized magnitudes to a common', verbose_name='H*')),
                ('k', models.FloatField(default=0, help_text='G*, J*, H*, K* are normalized magnitudes to a common', verbose_name='K*')),
                ('long', models.FloatField(default=0, help_text='East longitude of sub-planet point, deg, positive towards East', verbose_name='Long')),
                ('loc_t', models.TimeField(blank=True, default=None, help_text='loc. t.= UT + long: local solar time at sub-planet point, hh:mm', null=True, verbose_name='Loc. t.')),
                ('off_ra', models.FloatField(blank=True, default=0, help_text='Offset applied to ephemeris off_ra(mas) = A * (t-t0) + B', null=True, verbose_name='off_ra')),
                ('off_dec', models.FloatField(blank=True, default=0, help_text='Offset applied to ephemeris off_de(mas) = C * (t-t0) + D', null=True, verbose_name='off_dec')),
                ('proper_motion', models.CharField(blank=True, choices=[('ok', 'ok'), ('no', 'no')], default=None, help_text='proper motion applied? (ok, no)', max_length=2, null=True, verbose_name='Proper Motion')),
                ('ct', models.CharField(blank=True, default=None, help_text='only Gaia DR1 stars are used', max_length=10, null=True, verbose_name='ct')),
                ('multiplicity_flag', models.CharField(blank=True, choices=[('0', 'no multiple entries per star in astrometry'), ('1', 'single position from 2 or more uc/2m entries'), ('2', 'single position from 1 uc/2m entry only'), ('3', 'fs position from entry with more N contributions'), ('4', 'fs position from entry with best (x,y) error'), ('5', 'fs position from entry with brightest R mag.'), ('6', 'fs position from average over all entries.')], default=None, help_text='multiplicity flag (not applicable here) (see details in Assafin et al. 2010)', max_length=2, null=True, verbose_name='Multiplicity Flag')),
                ('e_ra', models.FloatField(blank=True, default=0, help_text='E_ra, E_dec: error of star position (mas)', null=True, verbose_name='E_ra')),
                ('e_dec', models.FloatField(blank=True, default=0, help_text='E_ra, E_dec: error of star position (mas)', null=True, verbose_name='E_dec')),
                ('pmra', models.FloatField(blank=True, default=0, help_text='star proper motion (mas/yr); (0 when not provided by Gaia DR1)', null=True, verbose_name='pmra')),
                ('pmdec', models.FloatField(blank=True, default=0, help_text='star proper motion (mas/yr); (0 when not provided by Gaia DR1)', null=True, verbose_name='pmra')),
                ('file_path', models.CharField(blank=True, help_text='Path to file, this is the internal path in the proccess directory.', max_length=2000, null=True, verbose_name='File Path')),
            ],
        ),
        migrations.CreateModel(
            name='PredictAsteroid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='(ucd=“meta.id;meta.main”) Object name (official or provisional designation).', max_length=32, verbose_name='Name')),
                ('number', models.CharField(blank=True, default=None, help_text='(ucd=“meta.id;meta.number”) Object number (not all objects have numbers assigned).', max_length=6, null=True, verbose_name='Number')),
                ('diameter', models.FloatField(blank=True, default=None, null=True, verbose_name='Diameter (Km)')),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failure', 'Failure'), ('not_executed', 'Not Executed')], default='pending', max_length=15, null=True, verbose_name='Status')),
                ('error_msg', models.CharField(blank=True, help_text='When the status is failure, this field should contain a message with the error.', max_length=256, null=True, verbose_name='Error Message')),
                ('catalog_rows', models.BigIntegerField(blank=True, null=True, verbose_name='Catalog Rows')),
                ('execution_time', models.DurationField(blank=True, null=True, verbose_name='Execution Time')),
                ('start_ephemeris', models.DateTimeField(blank=True, null=True, verbose_name='Start Ephemeris')),
                ('finish_ephemeris', models.DateTimeField(blank=True, null=True, verbose_name='Finish Ephemeris')),
                ('execution_ephemeris', models.DurationField(blank=True, null=True, verbose_name='Execution Ephemeris')),
                ('start_catalog', models.DateTimeField(blank=True, null=True, verbose_name='Start Catalog')),
                ('finish_catalog', models.DateTimeField(blank=True, null=True, verbose_name='Finish Catalog')),
                ('execution_catalog', models.DurationField(blank=True, null=True, verbose_name='Execution Catalog')),
                ('start_search_candidate', models.DateTimeField(blank=True, null=True, verbose_name='Start Search Candidate')),
                ('finish_search_candidate', models.DateTimeField(blank=True, null=True, verbose_name='Finish Search Candidate')),
                ('execution_search_candidate', models.DurationField(blank=True, null=True, verbose_name='Execution Search Candidate')),
                ('start_maps', models.DateTimeField(blank=True, null=True, verbose_name='Start Maps')),
                ('finish_maps', models.DateTimeField(blank=True, null=True, verbose_name='Finish Maps')),
                ('execution_maps', models.DurationField(blank=True, null=True, verbose_name='Execution Maps')),
                ('relative_path', models.CharField(blank=True, help_text='Path relative to the Prediction Occultation OBJECT directory, this is the internal path in the proccess directory.', max_length=256, null=True, verbose_name='Relative Path')),
            ],
        ),
        migrations.CreateModel(
            name='PredictInput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_type', models.CharField(choices=[('dates_file', 'Dates'), ('bsp_planetary', 'Planetary Ephemeris'), ('bsp_asteroid', 'Asteroid JPL Ephemeris'), ('leap_second', 'Leap Second'), ('positions', 'Positions'), ('ephemeris', 'Ephemeris'), ('catalog', 'Catalog')], help_text='Description of the input type.', max_length=60, verbose_name='Input Type')),
                ('filename', models.CharField(max_length=256, verbose_name='Filename')),
                ('file_size', models.BigIntegerField(blank=True, help_text='File Size in bytes', null=True, verbose_name='File Size')),
                ('file_type', models.CharField(blank=True, help_text="File extension like '.txt'", max_length=10, null=True, verbose_name='File Type')),
                ('file_path', models.CharField(blank=True, help_text='Path to file, this is the internal path in the proccess directory.', max_length=1024, null=True, verbose_name='File Path')),
                ('asteroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='input_file', to='predict.PredictAsteroid', verbose_name='Asteroid')),
            ],
        ),
        migrations.CreateModel(
            name='PredictOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ephemeris', 'Ephemeris'), ('radec', 'RA Dec'), ('positions', 'Positions'), ('asteroid_orbit', 'Asteroid Orbit'), ('neighborhood_stars', 'Neighborhood Stars'), ('catalog', 'Catalog'), ('catalog_csv', 'Catalog CSV'), ('stars_catalog_mini', 'Star Catalog Mini'), ('stars_catalog_xy', 'Start Catalog XY'), ('stars_parameters_of_occultation', 'Start Parameters of Occultation'), ('stars_parameters_of_occultation_plot', 'Start Parameters of Occultation Table'), ('occultation_table', 'Occultation Table CSV')], help_text='Description of the result type.', max_length=60, verbose_name='Type')),
                ('filename', models.CharField(help_text='Filename is formed by name without space and separated by underline.', max_length=256, verbose_name='Filename')),
                ('file_size', models.BigIntegerField(help_text='File Size in bytes', verbose_name='File Size')),
                ('file_type', models.CharField(help_text="File extension like '.txt'", max_length=10, verbose_name='File Type')),
                ('file_path', models.CharField(blank=True, help_text='Path to file, this is the internal path in the proccess directory.', max_length=1024, null=True, verbose_name='File Path')),
                ('asteroid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predict_result', to='predict.PredictAsteroid', verbose_name='Asteroid')),
            ],
        ),
        migrations.CreateModel(
            name='PredictRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ephemeris_initial_date', models.DateTimeField(help_text='Initial date to generate Ephemeris', verbose_name='Ephemeris Start Date')),
                ('ephemeris_final_date', models.DateTimeField(help_text='Final date to generate Ephemeris', verbose_name='Ephemers End Date')),
                ('ephemeris_step', models.PositiveIntegerField(default=600, help_text='Interval in seconds to generate Ephemeris', verbose_name='Ephemeris Step')),
                ('catalog_radius', models.FloatField(default=0.15, help_text='Radius in degrees for the querys in the star catalog.', verbose_name='Catalog Radius')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('finish_time', models.DateTimeField(blank=True, null=True, verbose_name='Finish Time')),
                ('execution_time', models.DurationField(blank=True, null=True, verbose_name='Execution Time')),
                ('execution_dates', models.DurationField(blank=True, null=True, verbose_name='Execution Dates')),
                ('execution_ephemeris', models.DurationField(blank=True, null=True, verbose_name='Execution Ephemeris')),
                ('execution_catalog', models.DurationField(blank=True, null=True, verbose_name='Execution Catalog')),
                ('execution_search_candidate', models.DurationField(blank=True, null=True, verbose_name='Execution Search Candidate')),
                ('execution_maps', models.DurationField(blank=True, null=True, verbose_name='Execution Maps')),
                ('execution_register', models.DurationField(blank=True, null=True, verbose_name='Execution Register')),
                ('average_time', models.FloatField(blank=True, null=True, verbose_name='Average Time')),
                ('count_objects', models.PositiveIntegerField(blank=True, help_text='Number of objects received as input', null=True, verbose_name='Num Objects')),
                ('count_success', models.PositiveIntegerField(blank=True, help_text='Number of objects successfully executed', null=True, verbose_name='Count Success')),
                ('count_failed', models.PositiveIntegerField(blank=True, help_text='Number of failed objects', null=True, verbose_name='Count Failed')),
                ('count_warning', models.PositiveIntegerField(blank=True, help_text='Number of objects with status warning', null=True, verbose_name='Count Warning')),
                ('count_not_executed', models.PositiveIntegerField(blank=True, help_text='Number of objects that were NOT executed.', null=True, verbose_name='Num Not Executed Objects')),
                ('relative_path', models.CharField(blank=True, help_text='Path relative to the prediction occultation directory, this is the internal path in the proccess directory.', max_length=256, null=True, verbose_name='Relative Path')),
                ('status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failure', 'Failure')], default='pending', max_length=10, null=True, verbose_name='Status')),
                ('bsp_planetary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predict.BspPlanetary', verbose_name='BSP Planetary')),
                ('catalog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tno.Catalog', verbose_name='Catalog')),
                ('input_list', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='predict_input_list', to='tno.CustomList', verbose_name='Input List')),
                ('input_orbit', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='predict_input_orbit_run', to='orbit.OrbitRun', verbose_name='Orbit Run')),
                ('leap_second', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predict.LeapSecond', verbose_name='Leap Second')),
                ('owner', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='predict_owner', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predict_run', to='tno.Proccess', verbose_name='Process')),
            ],
        ),
        migrations.AddField(
            model_name='predictasteroid',
            name='predict_run',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='asteroids', to='predict.PredictRun', verbose_name='Predict Run'),
        ),
        migrations.AddField(
            model_name='occultation',
            name='asteroid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='occultation', to='predict.PredictAsteroid', verbose_name='Asteroid'),
        ),
        migrations.AlterUniqueTogether(
            name='predictasteroid',
            unique_together={('predict_run', 'name')},
        ),
    ]
